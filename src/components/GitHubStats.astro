---
import { UX_CONFIG } from '../utils/ux';

const githubUsername = 'madezmedia';
const githubStatsImages = [
    {
        src: `https://github-readme-stats.vercel.app/api?username=${githubUsername}&show_icons=true&theme=dark&hide_border=true&bg_color=121212&title_color=D4AF37&text_color=C0C0C0`,
        alt: 'GitHub Stats',
        title: 'GitHub Repository Statistics'
    },
    {
        src: `https://github-readme-stats.vercel.app/api/top-langs/?username=${githubUsername}&layout=compact&theme=dark&hide_border=true&bg_color=121212&title_color=D4AF37&text_color=C0C0C0`,
        alt: 'Top Languages',
        title: 'Most Used Programming Languages'
    },
    {
        src: `https://github-readme-streak-stats.herokuapp.com/?user=${githubUsername}&theme=dark&hide_border=true&background=121212&ring=D4AF37&fire=D4AF37&currStreakLabel=C0C0C0`,
        alt: 'GitHub Streak Stats',
        title: 'Contribution Streak'
    }
];
---

<section class="github-stats-section">
    <div class="github-stats-header">
        <h2 class="section-title">GitHub Insights</h2>
        <p class="section-subtitle">Coding Journey & Technical Landscape</p>
    </div>

    <div class="github-stats-grid">
        <div class="github-stats-images">
            {githubStatsImages.map((image) => (
                <div class="github-stat-image-container">
                    <img 
                        data-src={image.src} 
                        alt={image.alt} 
                        title={image.title}
                        loading="lazy"
                        decoding="async"
                        width="480"
                        height="240"
                        class="github-stat-image"
                    />
                </div>
            ))}
        </div>
    </div>

    <div class="github-profile-link">
        <a 
            href={`https://github.com/${githubUsername}`} 
            target="_blank" 
            rel="noopener noreferrer"
            class="profile-link"
        >
            Explore Full GitHub Profile
        </a>
    </div>
</section>

<style define:vars={{
    transitionDuration: `${UX_CONFIG.TRANSITION_DURATION}ms`
}}>
    .github-stats-section {
        max-width: 1200px;
        margin: 4rem auto;
        padding: 2rem;
        background: linear-gradient(
            135deg, 
            color-mix(in srgb, var(--bg-primary) 90%, transparent),
            color-mix(in srgb, var(--bg-secondary) 90%, transparent)
        );
        border-radius: 16px;
        border: 1px solid color-mix(in srgb, var(--accent) 20%, transparent);
        box-shadow: 
            0 15px 30px color-mix(in srgb, var(--accent) 10%, transparent),
            0 10px 20px color-mix(in srgb, var(--accent) 5%, transparent);
        transition: transform var(--transitionDuration) ease;
    }

    .github-stats-header {
        text-align: center;
        margin-bottom: 2rem;
    }

    .section-title {
        font-size: 2.5rem;
        color: var(--primary);
        margin: 0;
        font-family: 'Orbitron', sans-serif;
        background: linear-gradient(
            to right, 
            var(--primary), 
            color-mix(in srgb, var(--primary) 50%, transparent)
        );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .section-subtitle {
        color: var(--text-secondary);
        opacity: 0.7;
        margin-top: 0.5rem;
        text-align: center;
    }

    .github-stats-images {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 1rem;
    }

    .github-stat-image-container {
        background: color-mix(in srgb, var(--accent) 10%, transparent);
        border-radius: 12px;
        overflow: hidden;
        transition: 
            transform var(--transitionDuration) ease,
            box-shadow var(--transitionDuration) ease;
    }

    .github-stat-image-container:hover {
        transform: scale(1.02);
        box-shadow: 
            0 15px 30px color-mix(in srgb, var(--accent) 20%, transparent),
            0 10px 20px color-mix(in srgb, var(--accent) 10%, transparent);
    }

    .github-stat-image {
        width: 100%;
        height: auto;
        object-fit: cover;
        border-radius: 12px;
        filter: saturate(0.9) contrast(1.1);
        transition: filter var(--transitionDuration) ease;
    }

    .github-stat-image:hover {
        filter: saturate(1.1) contrast(1.2);
    }

    .github-profile-link {
        display: flex;
        justify-content: center;
        margin-top: 2rem;
    }

    .profile-link {
        background: var(--primary);
        color: var(--bg-primary);
        padding: 0.75rem 1.5rem;
        text-decoration: none;
        border-radius: 8px;
        transition: 
            transform var(--transitionDuration) ease,
            box-shadow var(--transitionDuration) ease;
    }

    .profile-link:hover {
        transform: scale(1.05);
        box-shadow: 
            0 10px 20px color-mix(in srgb, var(--primary) 30%, transparent),
            0 6px 10px color-mix(in srgb, var(--primary) 20%, transparent);
    }

    @media (max-width: 1024px) {
        .github-stats-images {
            grid-template-columns: 1fr 1fr;
        }
    }

    @media (max-width: 768px) {
        .github-stats-images {
            grid-template-columns: 1fr;
        }
    }
</style>

<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
    const images = document.querySelectorAll('.github-stat-image');
    
    const imageObserver = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const img = entry.target;
                if (img instanceof HTMLImageElement) {
                    img.src = img.dataset.src || '';
                    observer.unobserve(img);
                }
            }
        });
    }, { rootMargin: '50px' });

    images.forEach(img => imageObserver.observe(img));
});
</script>
