---
import { THEME_TRANSITION_DURATION } from '../utils/theme';

const navLinks = [
    { name: 'Home', href: '#hero', icon: 'üè†', ariaLabel: 'Navigate to Home section' },
    { name: 'About', href: '#about', icon: 'üë§', ariaLabel: 'Navigate to About section' },
    { name: 'Projects', href: '#projects', icon: 'üí°', ariaLabel: 'Navigate to Projects section' },
    { name: 'Skills', href: '#skills', icon: 'üõ†Ô∏è', ariaLabel: 'Navigate to Skills section' },
    { name: 'Achievements', href: '#achievements', icon: 'üèÜ', ariaLabel: 'Navigate to Achievements section' },
    { name: 'Testimonials', href: '#testimonials', icon: 'üí¨', ariaLabel: 'Navigate to Testimonials section' },
    { name: 'Contact', href: '#contact', icon: 'üìû', ariaLabel: 'Navigate to Contact section' }
];
---

<nav 
    class="navbar" 
    aria-label="Main Navigation" 
    role="navigation"
>
    <div class="navbar-container">
        <div class="logo-container">
            <a 
                href="#hero" 
                class="logo desktop-logo" 
                aria-label="Michael Shaw Portfolio Home"
                data-nav-link
            >
                MIKEY SHAW
            </a>
        </div>
        
        <div class="nav-controls">
            <div 
                class="theme-toggle desktop" 
                id="theme-toggle" 
                title="Toggle Theme" 
                role="button" 
                aria-pressed="false" 
                tabindex="0"
            >
                <span class="theme-icon" aria-hidden="true">üåì</span>
            </div>
            
            <button 
                class="menu-toggle" 
                id="mobile-menu" 
                aria-label="Open Navigation Menu" 
                aria-expanded="false"
            >
                <span class="theme-icon" aria-hidden="true">üìã</span>
            </button>
        </div>
        
        <ul class="nav-menu" role="menu">
            {navLinks.map((link) => (
                <li class="nav-item" role="none">
                    <a 
                        href={link.href} 
                        class="nav-link" 
                        role="menuitem"
                        aria-label={link.ariaLabel}
                        data-nav-link
                    >
                        <span class="nav-icon" aria-hidden="true">{link.icon}</span>
                        <span class="nav-link-text">{link.name}</span>
                    </a>
                </li>
            ))}
        </ul>
    </div>
    
    <div 
        class="mobile-drawer" 
        id="mobile-drawer" 
        role="dialog" 
        aria-modal="true" 
        aria-label="Navigation Menu"
    >
        <div class="drawer-content">
            <div class="glass-card">
                <button 
                    class="close-drawer" 
                    id="close-drawer" 
                    aria-label="Close Navigation Menu"
                >
                    <span class="theme-icon" aria-hidden="true">‚ùå</span>
                </button>
                <div class="mobile-nav-header">
                    <img 
                        src="/images/mad-ez-media-logo.png" 
                        alt="Mad EZ Media Logo" 
                        class="mobile-nav-logo"
                        loading="lazy"
                    >
                    <h2 class="mobile-nav-title">Navigation</h2>
                </div>
                <div class="mobile-theme-toggle">
                    <div 
                        class="theme-toggle mobile" 
                        id="mobile-theme-toggle" 
                        title="Toggle Theme" 
                        role="button" 
                        aria-pressed="false" 
                        tabindex="0"
                    >
                        <span class="theme-icon" aria-hidden="true">üåì</span>
                        <span class="theme-text">Switch Theme</span>
                    </div>
                </div>
                <ul class="mobile-nav-menu" role="menu">
                    {navLinks.map((link) => (
                        <li class="mobile-nav-item" role="none">
                            <a 
                                href={link.href} 
                                class="mobile-nav-link" 
                                role="menuitem"
                                aria-label={link.ariaLabel}
                                data-nav-link
                            >
                                <span class="nav-icon" aria-hidden="true">{link.icon}</span>
                                <span class="nav-link-text">{link.name}</span>
                            </a>
                        </li>
                    ))}
                </ul>
            </div>
        </div>
    </div>
</nav>

<style define:vars={{ THEME_TRANSITION_DURATION }}>
    @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700&display=swap');

    .logo {
        font-family: 'Orbitron', sans-serif;
        font-size: 1.5rem;
        font-weight: 700;
        text-decoration: none;
        transition: color calc(var(--THEME_TRANSITION_DURATION) * 1ms) ease;
        letter-spacing: 0.1em;
        color: #D4AF37; /* Gold in dark mode */
    }

    :root[data-theme='light'] .logo {
        color: #28A745; /* Green in light mode */
    }

    .navbar {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        background: color-mix(in srgb, var(--bg-primary) 80%, transparent);
        backdrop-filter: blur(10px);
        z-index: 1000;
        transition: all calc(var(--THEME_TRANSITION_DURATION) * 1ms) ease;
        border-bottom: 1px solid var(--border-color);
    }

    .navbar-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: 1200px;
        margin: 0 auto;
        padding: 1rem 2rem;
    }

    .nav-menu {
        display: flex;
        list-style: none;
        margin: 0;
        padding: 0;
        align-items: center;
    }

    .nav-item {
        margin-left: 1rem;
    }

    .nav-link {
        font-family: 'Orbitron', sans-serif;
        color: var(--secondary);
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: color 0.3s ease;
        text-transform: uppercase;
        font-size: 0.8rem;
        letter-spacing: 0.1em;
    }

    .nav-link:hover {
        color: var(--primary-color);
    }

    .nav-icon {
        font-size: 1rem;
        opacity: 0.7;
        transition: opacity 0.3s ease;
    }

    .nav-link:hover .nav-icon {
        opacity: 1;
    }

    .menu-toggle {
        display: none;
        flex-direction: column;
        width: 25px;
        height: 20px;
        background: none;
        border: none;
        cursor: pointer;
    }

    .hamburger-line {
        width: 100%;
        height: 2px;
        background-color: var(--primary-color);
        margin: 3px 0;
        transition: 0.3s ease;
        transform-origin: center;
    }

    .close-drawer {
        position: absolute;
        top: 1rem;
        right: 1rem;
        width: 24px;
        height: 24px;
        background: none;
        border: none;
        cursor: pointer;
        padding: 0;
    }

    .close-line {
        position: absolute;
        width: 100%;
        height: 2px;
        background-color: var(--primary-color);
        transition: 0.3s ease;
    }

    .close-line:first-child {
        transform: rotate(45deg);
    }

    .close-line:last-child {
        transform: rotate(-45deg);
    }

    @media (max-width: 992px) {
        .nav-menu {
            display: none;
        }

        .menu-toggle {
            display: flex;
        }
    }

    /* Mobile Drawer Styles */
    .mobile-drawer {
        position: fixed;
        top: 0;
        right: -100%;
        width: 300px;
        height: 100%;
        background: var(--bg-primary);
        transition: 0.5s;
        z-index: 1100;
    }

    .mobile-drawer.active {
        right: 0;
    }

    .glass-card {
        height: 100%;
        background: var(--bg-secondary);
        backdrop-filter: blur(15px);
        padding: 2rem;
        display: flex;
        flex-direction: column;
    }

    .mobile-nav-menu {
        list-style: none;
        padding: 0;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .mobile-nav-link {
        display: flex;
        align-items: center;
        color: var(--secondary-color);
        text-decoration: none;
        font-family: 'Orbitron', sans-serif;
        font-size: 1.2rem;
        margin-bottom: 1.5rem;
        transition: color 0.3s ease;
        text-transform: uppercase;
    }

    .mobile-nav-link:hover {
        color: var(--primary-color);
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const navLinks = document.querySelectorAll('[data-nav-link]');
    const mobileDrawer = document.getElementById('mobile-drawer');
    const mobileMenuButton = document.getElementById('mobile-menu');
    const closeDrawerButton = document.getElementById('close-drawer');
    const desktopThemeToggle = document.getElementById('theme-toggle');
    const mobileThemeToggle = document.getElementById('mobile-theme-toggle');
    const mobileNavLinks = document.querySelectorAll('.mobile-nav-link');

    let currentTheme = localStorage.getItem('theme') || 'dark';
    document.documentElement.setAttribute('data-theme', currentTheme);

    function smoothScroll(e) {
        e.preventDefault();
        const targetId = e.currentTarget.getAttribute('href');
        const targetElement = document.querySelector(targetId);
        
        if (targetElement) {
            targetElement.scrollIntoView({ 
                behavior: 'smooth',
                block: 'start'
            });
            
            // Close mobile drawer if open
            if (mobileDrawer) {
                mobileDrawer.classList.remove('active');
                mobileMenuButton.setAttribute('aria-expanded', 'false');
            }
        }
    }

    // Add smooth scroll to all nav links
    navLinks.forEach(link => {
        link.addEventListener('click', smoothScroll);
    });

    function toggleTheme() {
        currentTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
        document.documentElement.setAttribute('data-theme', currentTheme);
        
        const themeChangeEvent = new CustomEvent('theme-changed', { 
            detail: { theme: currentTheme } 
        });
        document.dispatchEvent(themeChangeEvent);

        localStorage.setItem('theme', currentTheme);

        desktopThemeToggle?.setAttribute('aria-pressed', String(currentTheme === 'light'));
        mobileThemeToggle?.setAttribute('aria-pressed', String(currentTheme === 'light'));
    }

    function toggleMobileDrawer() {
        const isOpen = mobileDrawer.classList.toggle('active');
        mobileMenuButton.setAttribute('aria-expanded', String(isOpen));
    }

    if (desktopThemeToggle) {
        desktopThemeToggle.addEventListener('click', toggleTheme);
        desktopThemeToggle.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' || e.key === ' ') {
                e.preventDefault();
                toggleTheme();
            }
        });
    }

    if (mobileThemeToggle) {
        mobileThemeToggle.addEventListener('click', toggleTheme);
        mobileThemeToggle.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' || e.key === ' ') {
                e.preventDefault();
                toggleTheme();
            }
        });
    }

    if (mobileMenuButton) {
        mobileMenuButton.addEventListener('click', (e) => {
            e.stopPropagation();
            toggleMobileDrawer();
        });
    }

    if (closeDrawerButton) {
        closeDrawerButton.addEventListener('click', (e) => {
            e.stopPropagation();
            mobileDrawer.classList.remove('active');
            mobileMenuButton.setAttribute('aria-expanded', 'false');
        });
    }

    mobileNavLinks.forEach(link => {
        link.addEventListener('click', (e) => {
            e.stopPropagation();
            mobileDrawer.classList.remove('active');
            mobileMenuButton.setAttribute('aria-expanded', 'false');
        });
    });

    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && mobileDrawer.classList.contains('active')) {
            mobileDrawer.classList.remove('active');
            mobileMenuButton.setAttribute('aria-expanded', 'false');
            mobileMenuButton.focus();
        }
    });
});
</script>
